<!-- Facebook Pixel Code -->
<script>
!function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?
n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;
n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;
t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,
document,'script','https://connect.facebook.net/en_US/fbevents.js');
fbq('init', '580725838769524'); // Insert your pixel ID here.
fbq('track', 'PageView');
</script>

<noscript>
<img height="1" width="1" style="display:none" src="https://www.facebook.com/tr?id=580725838769524&ev=PageView&noscript=1"/></noscript>
<!-- DO NOT MODIFY -->
<!-- End Facebook Pixel Code -->

#appointment_index

  .row
    %img.img-responsive
      #map{:style => "width: 100%; height: 400px;"} 

  .row 
    - if user_signed_in? && !Vendor.exists?(user_id: current_user)  
      %h2= link_to "Interested In offering services on PamperedUp?", new_vendor_path

  .row
    %br
    .col-md-2
      .well
        = form_for_filterrific @filterrific do |f|
          .form-group.chardin_box{ :'data-position' => 'top', :'data-intro' => 'Search by service.' }
            %label Appointment Title
            = f.text_field :search_query, placeholder: "Search Names", :class => 'filterrific-periodically-observed form-control'

          .form-group.chardin_box{ :'data-position' => 'top', :'data-intro' => 'Search zips.' }
            %label Change Zip Code
            = text_field_tag :zip_search, params[:zip_search], placeholder: 'New Zip Code Search'

          .form-group.chardin_box{ :'data-position' => 'top', :'data-intro' => 'Filter by service.' }
            %label Service Type
            = f.select :with_service_id, @filterrific.select_options[:with_service_id], { :include_blank => '- Any -' }, { :class => 'form-control' }

    .col-md-10
      #results
        = render :partial => 'appointments/list', :locals => { :appointments => @appointments }



:javascript
    $('.star-rating').raty({
        path: '/assets/',
        readOnly: true,
        score: function() {
            return $(this).attr('dscore');
        }
    }); 

:javascript
  handler = Gmaps.build('Google');
  handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
    markers = handler.addMarkers(#{raw @hash.to_json});
    handler.bounds.extendWith(markers);
    handler.fitMapToBounds();
  });

:javascript
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-77303912-2', 'auto');
  ga('send', 'pageview');